<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.appoint.member.mapper.MemberMapper">
    
    <resultMap type="Member" id="MemberResult">
        <result property="id"    column="id"    />
        <result property="nickname"    column="nickname"    />
        <result property="avatarUrl"    column="avatar_url"    />
        <result property="gender"    column="gender"    />
        <result property="realName"    column="real_name"    />
        <result property="mobile"    column="mobile"    />
        <result property="loginName"    column="login_name"    />
        <result property="password"    column="password"    />
        <result property="openId"    column="open_id"    />
        <result property="createTime"    column="create_time"    />
    </resultMap>

    <sql id="selectMemberVo">
        select id, nickname, avatar_url, gender, real_name, mobile, login_name, password, open_id, create_time from appoint_member
    </sql>

    <select id="selectMemberList" parameterType="Member" resultMap="MemberResult">
        <include refid="selectMemberVo"/>
        <where>  
            <if test="nickname != null  and nickname != ''"> and nickname like concat('%', #{nickname}, '%')</if>
            <if test="realName != null  and realName != ''"> and real_name like concat('%', #{realName}, '%')</if>
            <if test="mobile != null  and mobile != ''"> and mobile like concat('%', #{mobile}, '%')</if>
        </where>
    </select>
    
    <select id="selectMemberById" parameterType="Long" resultMap="MemberResult">
        <include refid="selectMemberVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertMember" parameterType="Member" useGeneratedKeys="true" keyProperty="id">
        insert into appoint_member
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="nickname != null">nickname,</if>
            <if test="avatarUrl != null">avatar_url,</if>
            <if test="gender != null">gender,</if>
            <if test="realName != null">real_name,</if>
            <if test="mobile != null">mobile,</if>
            <if test="loginName != null">login_name,</if>
            <if test="password != null">password,</if>
            <if test="openId != null">open_id,</if>
            <if test="createTime != null">create_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="nickname != null">#{nickname},</if>
            <if test="avatarUrl != null">#{avatarUrl},</if>
            <if test="gender != null">#{gender},</if>
            <if test="realName != null">#{realName},</if>
            <if test="mobile != null">#{mobile},</if>
            <if test="loginName != null">#{loginName},</if>
            <if test="password != null">#{password},</if>
            <if test="openId != null">#{openId},</if>
            <if test="createTime != null">#{createTime},</if>
         </trim>
    </insert>

    <update id="updateMember" parameterType="Member">
        update appoint_member
        <trim prefix="SET" suffixOverrides=",">
            <if test="nickname != null">nickname = #{nickname},</if>
            <if test="avatarUrl != null">avatar_url = #{avatarUrl},</if>
            <if test="gender != null">gender = #{gender},</if>
            <if test="realName != null">real_name = #{realName},</if>
            <if test="mobile != null">mobile = #{mobile},</if>
            <if test="loginName != null">login_name = #{loginName},</if>
            <if test="password != null">password = #{password},</if>
            <if test="openId != null">open_id = #{openId},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteMemberById" parameterType="Long">
        delete from appoint_member where id = #{id}
    </delete>

    <delete id="deleteMemberByIds" parameterType="String">
        delete from appoint_member where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <select id="selectMemberByOpenId" parameterType="String" resultMap="MemberResult">
        <include refid="selectMemberVo"/>
        where open_id = #{openid}
    </select>
    
    <select id="queryMemberByLoginName" parameterType="String" resultMap="MemberResult">
        <include refid="selectMemberVo"/>
        where login_name = #{loginName}
    </select>

</mapper>